[metadata]
format.version = "1.1"

[versions]
apacheCommonsPool2 = "2.12.1"
apicatalog = "0.14.0"
assertj = "3.27.3"
atomikos = "6.0.0"
awaitility = "4.2.2"
bouncyCastle-jdk18on = "1.80"
cloudEvents = "4.0.1"
edc = "0.12.0-SNAPSHOT"
failsafe = "3.3.2"
h2 = "2.3.232"
httpMockServer = "5.15.0"
jakarta-annotation = "3.0.0"
jakarta-json = "2.1.3"
jakarta-transaction = "2.0.1"
jackson = "2.18.2"
jersey = "3.1.10"
jetbrainsAnnotation = "26.0.2"
jetty = "11.0.24"
jetty-jakarta-servlet-api = "5.0.2"
junit-pioneer = "2.3.0"
jupiter = "5.12.0"
micrometer = "1.14.4"
mockito = "5.2.0"
nimbus = "10.0.1"
okhttp = "4.12.0"
opentelemetry = "1.32.0"
opentelemetry-proto = "1.6.0-alpha-SNAPSHOT"
parsson = "1.1.7"
postgres = "42.7.5"
restAssured = "5.5.1"
rsApi = "4.0.0"
swagger = "2.2.28"
titanium = "1.5.0"
kafkaClients = "3.9.0"
testcontainers = "1.20.5"
tink = "1.15.0"


[libraries]
iron-vc = { module = "com.apicatalog:iron-verifiable-credentials", version.ref = "apicatalog" }
iron-ed25519 = { module = "com.apicatalog:iron-ed25519-cryptosuite-2020", version.ref = "apicatalog" }
assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
awaitility = { module = "org.awaitility:awaitility", version.ref = "awaitility" }
bouncyCastle-bcpkixJdk18on = { module = "org.bouncycastle:bcpkix-jdk18on", version.ref = "bouncyCastle-jdk18on" }
bouncyCastle-bcprovJdk18on = { module = "org.bouncycastle:bcprov-jdk18on", version.ref = "bouncyCastle-jdk18on" }
dnsOverHttps = { module = "com.squareup.okhttp3:okhttp-dnsoverhttps", version.ref = "okhttp" }
edc-runtime-metamodel = { module = "org.eclipse.edc:runtime-metamodel", version.ref = "edc" }
failsafe-core = { module = "dev.failsafe:failsafe", version.ref = "failsafe" }
failsafe-okhttp = { module = "dev.failsafe:failsafe-okhttp", version.ref = "failsafe" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-datatype-jakarta-jsonp = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jakarta-jsonp", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jakarta-annotation = { module = "jakarta.annotation:jakarta.annotation-api", version.ref = "jakarta-annotation" }
jakarta-json-api = { module = "jakarta.json:jakarta.json-api", version.ref = "jakarta-json" }
jakarta-rsApi = { module = "jakarta.ws.rs:jakarta.ws.rs-api", version.ref = "rsApi" }
jakarta-transaction-api = { module = "jakarta.transaction:jakarta.transaction-api", version.ref = "jakarta-transaction" }
jersey-common = { module = "org.glassfish.jersey.core:jersey-common", version.ref = "jersey" }
jersey-inject = { module = "org.glassfish.jersey.inject:jersey-hk2", version.ref = "jersey" }
jersey-jackson = { module = "org.glassfish.jersey.media:jersey-media-json-jackson", version.ref = "jersey" }
jersey-multipart = { module = "org.glassfish.jersey.media:jersey-media-multipart", version.ref = "jersey" }
jersey-server = { module = "org.glassfish.jersey.core:jersey-server", version.ref = "jersey" }
jersey-servlet = { module = "org.glassfish.jersey.containers:jersey-container-servlet", version.ref = "jersey" }
jersey-servletcore = { module = "org.glassfish.jersey.containers:jersey-container-servlet-core", version.ref = "jersey" }
jetbrains-annotations = { module = "org.jetbrains:annotations", version.ref = "jetbrainsAnnotation" }
jetty-jakarta-servlet-api = { module = "org.eclipse.jetty.toolchain:jetty-jakarta-servlet-api", version.ref = "jetty-jakarta-servlet-api" }
jetty-websocket = { module = "org.eclipse.jetty.websocket:websocket-jakarta-server", version.ref = "jetty" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "jupiter" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "jupiter" }
junit-pioneer = { module = "org.junit-pioneer:junit-pioneer", version.ref = "junit-pioneer" }
micrometer = { module = "io.micrometer:micrometer-core", version.ref = "micrometer" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito" }
mockserver-client = { module = "org.mock-server:mockserver-client-java", version.ref = "httpMockServer" }
mockserver-netty = { module = "org.mock-server:mockserver-netty", version.ref = "httpMockServer" }
nimbus-jwt = { module = "com.nimbusds:nimbus-jose-jwt", version.ref = "nimbus" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
opentelemetry-api = { module = "io.opentelemetry:opentelemetry-api", version.ref = "opentelemetry" }
opentelemetry-instrumentation-annotations = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations", version.ref = "opentelemetry" }
opentelemetry-proto = { module = "io.opentelemetry.proto:opentelemetry-proto", version.ref = "opentelemetry-proto" }
parsson = { module = "org.eclipse.parsson:parsson", version.ref = "parsson" }
restAssured = { module = "io.rest-assured:rest-assured", version.ref = "restAssured" }
swagger-annotations-jakarta = { module = "io.swagger.core.v3:swagger-annotations-jakarta", version.ref = "swagger" }
titaniumJsonLd = { module = "com.apicatalog:titanium-json-ld", version.ref = "titanium" }
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-kafka = { module = "org.testcontainers:kafka", version.ref = "testcontainers" }
testcontainers-postgres = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
testcontainers-vault = { module = "org.testcontainers:vault", version.ref = "testcontainers" }
tink = { module = "com.google.crypto.tink:tink", version.ref = "tink" }


# other technology extensions
apache-commons-pool = { module = "org.apache.commons:commons-pool2", version.ref = "apacheCommonsPool2" }
atomikos-jta = { module = "com.atomikos:transactions-jta", version.ref = "atomikos" }
atomikos-jdbc = { module = "com.atomikos:transactions-jdbc", version.ref = "atomikos" }
cloudEvents = { module = "io.cloudevents:cloudevents-http-basic", version.ref = "cloudEvents" }
postgres = { module = "org.postgresql:postgresql", version.ref = "postgres" }
kafkaClients = { module = "org.apache.kafka:kafka-clients", version.ref = "kafkaClients" }
jsonschema = { module = "com.networknt:json-schema-validator", version = "1.5.6" }


[bundles]
jackson = ["jackson.annotations", "jackson.databind"]
jersey-core = ["jersey.server", "jersey.common", "jersey.jackson", "jersey.multipart", "jersey.inject", "jersey.servlet", "jersey.servletcore"]
jupiter = ["junit-jupiter-api", "junit-jupiter-params"]

[plugins]
shadow = { id = "com.gradleup.shadow", version = "8.3.6" }
swagger = { id = "io.swagger.core.v3.swagger-gradle-plugin", version.ref = "swagger" }
